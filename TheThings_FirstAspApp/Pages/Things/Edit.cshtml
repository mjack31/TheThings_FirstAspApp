@page "{thingId:int?}"
@model TheThings_FirstAspApp.Pages.Things.EditModel
@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>
<form method="post">
    <input type="hidden" asp-for="Thing.Id" />
    <div class="form-group">
        <label asp-for="Thing.Name"></label>
        <input class="form-control" asp-for="Thing.Name" />
        <span class="text-danger" asp-validation-for="Thing.Name"></span>
    </div>
    <div class="form-group">
        <label asp-for="Thing.Location"></label>
        <input class="form-control" asp-for="Thing.Location" />
        <span class="text-danger" asp-validation-for="Thing.Location"></span>
    </div>
    <div class="form-group">
        <label asp-for="Thing.Type"></label>
        <select class="form-control" asp-for="Thing.Type" asp-items="@Model.Types">
            @* W przypadku znacznika select użyć trzeba wersji z znacznikiem poczatkowym i końcowym inaczej nie dziala (nie używać "/>") *@
        </select>
        <span class="text-danger" asp-validation-for="Thing.Type"></span>
    </div>
    <button class="btn btn-danger">Save changes</button>
</form>

@* W _Layout na końcu odpalana jest sekcja skryptów JS (@RenderSection("Scripts", required: false)). Dzięki komendzie poniżej możemy wsrzyknąć dodatkowy kod JS to tej sekcji *@
@* Poniższy partial dodaje automatyczną walidację po stronie klienta *@
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

